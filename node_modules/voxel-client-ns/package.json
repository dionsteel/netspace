{
  "_args": [
    [
      "voxel-client-ns",
      "/home/dionsteel/dev/netspace"
    ]
  ],
  "_from": "voxel-client-ns@latest",
  "_id": "voxel-client-ns@2.1.0",
  "_inCache": true,
  "_installable": true,
  "_location": "/voxel-client-ns",
  "_npmUser": {
    "email": "aaron@kumavis.me",
    "name": "kumavis"
  },
  "_npmVersion": "1.3.14",
  "_phantomChildren": {},
  "_requested": {
    "name": "voxel-client-ns",
    "raw": "voxel-client-ns",
    "rawSpec": "",
    "scope": null,
    "spec": "latest",
    "type": "tag"
  },
  "_requiredBy": [
    "#USER"
  ],
  "_resolved": "https://registry.npmjs.org/voxel-client-ns/-/voxel-client-ns-2.1.0.tgz",
  "_shasum": "ed2abacca493ac655d21fe008fcb144f8edf08c3",
  "_shrinkwrap": null,
  "_spec": "voxel-client-ns",
  "_where": "/home/dionsteel/dev/netspace",
  "bugs": {
    "url": "https://github.com/kumavis/voxel-server/issues"
  },
  "dependencies": {
    "duplex-emitter": "0.1.10",
    "extend": "1.1.3",
    "minecraft-skin": "0.1.2",
    "voxel-crunch": "0.1.1",
    "voxel-engine-ns": "0.20.0",
    "voxel-player": "0.1.0"
  },
  "description": "multiplayer client for voxel-server",
  "devDependencies": {},
  "directories": {},
  "dist": {
    "shasum": "ed2abacca493ac655d21fe008fcb144f8edf08c3",
    "tarball": "https://registry.npmjs.org/voxel-client-ns/-/voxel-client-ns-2.1.0.tgz"
  },
  "engines": {
    "node": "0.10.20"
  },
  "homepage": "https://github.com/kumavis/voxel-server",
  "maintainers": [
    {
      "name": "kumavis",
      "email": "aaron@kumavis.me"
    }
  ],
  "name": "voxel-client-ns",
  "optionalDependencies": {},
  "readme": "# voxel-client-ns\n\nEnable an app based on voxel-engine-ns to be a client for [voxel-server](https://github.com/kumavis/voxel-server)\n\n\n## Using as a module\n\n```javascript\n// establish a transport stream with the server\nvar duplexStream = SomeTransportSteam()\n\nvar client = new Client({\n  serverStream: duplexStream,\n  container: document.body,\n})\n\n// use the client.connection [DuplexEmitter](https://github.com/pgte/duplex-emitter) to react to remote events\nclient.connection.on('join', function(user) {\n  console.log(user,'joined.')\n})\n\n// or emit your own events back to the server!\n// Note: to have the server forward the event to all players,\n// add the event name to `server.forwardEvents`\nclient.connection.emit('attack', attackDetails)\n```\n\n#### transport streams\n\nwebsockets: [websocket-stream](https://github.com/maxogden/websocket-stream)\n\nwebRTC: [rtc-data-stream](https://github.com/kumavis/rtc-data-stream)\n\n\n## further reading:\n\n- http://buildnewgames.com/real-time-multiplayer/\n- https://developer.valvesoftware.com/wiki/Source_Multiplayer_Networking\n- http://www.gabrielgambetta.com/?p=63 (all three parts)\n- http://gafferongames.com/networking-for-game-programmers/what-every-programmer-needs-to-know-about-game-networking/\n- http://gafferongames.com/game-physics/networked-physics/\n- http://udn.epicgames.com/Three/NetworkingOverview.html\n\n## license\n\nBSD LICENSE",
  "readmeFilename": "readme.md",
  "repository": {
    "type": "git",
    "url": "git+ssh://git@github.com/kumavis/voxel-server.git"
  },
  "version": "2.1.0"
}
