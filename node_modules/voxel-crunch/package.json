{
  "_args": [
    [
      "voxel-crunch@0.1.1",
      "/home/dionsteel/dev/netspace/node_modules/voxel-client"
    ]
  ],
  "_from": "voxel-crunch@0.1.1",
  "_id": "voxel-crunch@0.1.1",
  "_inCache": true,
  "_installable": true,
  "_location": "/voxel-crunch",
  "_npmUser": {
    "email": "mikolalysenko@gmail.com",
    "name": "mikolalysenko"
  },
  "_npmVersion": "1.2.11",
  "_phantomChildren": {},
  "_requested": {
    "name": "voxel-crunch",
    "raw": "voxel-crunch@0.1.1",
    "rawSpec": "0.1.1",
    "scope": null,
    "spec": "0.1.1",
    "type": "version"
  },
  "_requiredBy": [
    "/voxel-client",
    "/voxel-server"
  ],
  "_resolved": "https://registry.npmjs.org/voxel-crunch/-/voxel-crunch-0.1.1.tgz",
  "_shasum": "c8b4978bf88f573c7b743c3f1326b0da43f20ef9",
  "_shrinkwrap": null,
  "_spec": "voxel-crunch@0.1.1",
  "_where": "/home/dionsteel/dev/netspace/node_modules/voxel-client",
  "author": {
    "name": "Mikola Lysenko"
  },
  "bugs": {
    "url": "https://github.com/mikolalysenko/voxel-crunch/issues"
  },
  "dependencies": {},
  "description": "Compresses chunks from voxel.js",
  "devDependencies": {
    "tap": "~0.4.0"
  },
  "directories": {
    "test": "test"
  },
  "dist": {
    "shasum": "c8b4978bf88f573c7b743c3f1326b0da43f20ef9",
    "tarball": "https://registry.npmjs.org/voxel-crunch/-/voxel-crunch-0.1.1.tgz"
  },
  "gitHead": "4d7922868e62e8e5f8d98b2f7dc128319f05c97a",
  "homepage": "https://github.com/mikolalysenko/voxel-crunch#readme",
  "keywords": [
    "chunks",
    "compress",
    "js",
    "serialize",
    "voxel"
  ],
  "license": "BSD",
  "main": "index.js",
  "maintainers": [
    {
      "name": "mikolalysenko",
      "email": "mikolalysenko@gmail.com"
    }
  ],
  "name": "voxel-crunch",
  "optionalDependencies": {},
  "readme": "voxel-crunch\n============\nThis library applies run-length-encoding + gzip to an array of octets, and returns the result.  It can be used to compress individual chunks in voxel.js\n\nInstallation\n============\nVia npm:\n\n    npm install voxel-crunch\n    \nTo use it on the browser you'll need to install some zlib compatibility layer, for example [zlib-browserify](https://github.com/brianloveswords/zlib-browserify).\n\nExample\n=======\n\n    var data = chunk.voxels;\n    //First encode data\n    var rle = require(\"voxel-crunch\").encode(data);\n    //Then decode\n    var result = require(\"voxel-crunch\").decode(rle, data.length);\n    //Now\n    //    result == data\n\n`require(\"voxel-crunch\").encode(chunk)`\n------------------------------------------------------------\nThis method crunches a chunk down into a smaller representation.\n\n* `chunk` is either a `Buffer`, a `Uint8Array`, or an `Array` of bytes\n\nIt returns a Uint8Array containing a run-length-encoded representation of the chunks.\n\n`require(\"voxel-crunch\").decode(runs, chunk_len)`\n------------------------------------------------------------\nThis method decodes a crunched chunk back into a full chunk.  It takes 3 arguments:\n\n* `runs` is the crunched chunk\n* `chunk_len` is the length of the decoded chunk\n\nIf the runs are not valid, it throws an error.  Otherwise, it returns a buffer of length=chunk_len containing the decompressed voxel buffer.\n\n\nCredits\n=======\n(c) 2013 Mikola Lysenko. BSD\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git://github.com/mikolalysenko/voxel-crunch.git"
  },
  "scripts": {
    "test": "tap test/*.js"
  },
  "version": "0.1.1"
}
