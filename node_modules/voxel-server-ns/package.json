{
  "_args": [
    [
      "voxel-server-ns",
      "/home/dionsteel/dev/netspace"
    ]
  ],
  "_from": "voxel-server-ns@latest",
  "_id": "voxel-server-ns@2.1.0",
  "_inCache": true,
  "_installable": true,
  "_location": "/voxel-server-ns",
  "_npmUser": {
    "email": "aaron@kumavis.me",
    "name": "kumavis"
  },
  "_npmVersion": "1.3.7",
  "_phantomChildren": {},
  "_requested": {
    "name": "voxel-server-ns",
    "raw": "voxel-server-ns",
    "rawSpec": "",
    "scope": null,
    "spec": "latest",
    "type": "tag"
  },
  "_requiredBy": [
    "#USER"
  ],
  "_resolved": "https://registry.npmjs.org/voxel-server-ns/-/voxel-server-ns-2.1.0.tgz",
  "_shasum": "72e6c26d03c41eaddcf8f052334a23b013c0c97a",
  "_shrinkwrap": null,
  "_spec": "voxel-server-ns",
  "_where": "/home/dionsteel/dev/netspace",
  "bugs": {
    "url": "https://github.com/kumavis/voxel-server-ns/issues"
  },
  "dependencies": {
    "duplex-emitter": "0.1.10",
    "extend": "1.2.1",
    "hat": "0.0.3",
    "voxel": "0.3.1",
    "voxel-crunch": "0.1.1",
    "voxel-engine-ns": "0.20.0"
  },
  "description": "multiplayer server for [voxel-engine-ns](http://github.com/maxogden/voxel-engine-ns)",
  "devDependencies": {},
  "directories": {},
  "dist": {
    "shasum": "72e6c26d03c41eaddcf8f052334a23b013c0c97a",
    "tarball": "https://registry.npmjs.org/voxel-server-ns/-/voxel-server-ns-2.1.0.tgz"
  },
  "engines": {
    "node": "0.10.20"
  },
  "homepage": "https://github.com/kumavis/voxel-server-ns#readme",
  "maintainers": [
    {
      "name": "kumavis",
      "email": "aaron@kumavis.me"
    }
  ],
  "name": "voxel-server-ns",
  "optionalDependencies": {},
  "readme": "# voxel-server-ns\n\nmultiplayer server for [voxel-engine-ns](http://github.com/maxogden/voxel-engine-ns)\n\nUse with [voxel-client](https://github.com/kumavis/voxel-client)\n\n\n## Using as a module\nThe returned server object implements EventEmitter\n\n```javascript\nvar Server = require('voxel-server-ns')\n\nvar settings = {\n  // various [voxel-engine-ns]() settings to be sent to the clients\n  avatarInitialPosition: [2, 20, 2],\n  // list of incomming custom events to forward to all clients\n  forwardEvents: ['attack','voiceChat']\n}\n\n// create server\nvar server = Server(settings)\n\n// bind events\nserver.on('missingChunk', function(chunk){ ... })\nserver.on('client.join', function(client){ ... })\nserver.on('client.leave', function(client){ ... })\nserver.on('client.state', function(state){ ... })\nserver.on('chat', function(message){ ... })\nserver.on('set', function(pos, val, client){ ... })\nserver.on('error', function(error){ ... })\n\n// connect a client\nvar duplexStream = SomeTransportSteam()\nserver.connectClient(duplexStream)\n```\n\n#### transport streams\n\nwebsockets: [websocket-stream](https://github.com/maxogden/websocket-stream)\n\nwebRTC: [rtc-data-stream](https://github.com/kumavis/rtc-data-stream)\n\n\n\n## further reading:\n\n- http://buildnewgames.com/real-time-multiplayer/\n- https://developer.valvesoftware.com/wiki/Source_Multiplayer_Networking\n- http://www.gabrielgambetta.com/?p=63 (all three parts)\n- http://gafferongames.com/networking-for-game-programmers/what-every-programmer-needs-to-know-about-game-networking/\n- http://gafferongames.com/game-physics/networked-physics/\n- http://udn.epicgames.com/Three/NetworkingOverview.html\n\n## license\n\nBSD\n",
  "readmeFilename": "readme.md",
  "repository": {
    "type": "git",
    "url": "git+ssh://git@github.com/kumavis/voxel-server-ns.git"
  },
  "subdomain": "voxel",
  "version": "2.1.0"
}
